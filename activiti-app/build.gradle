/*
 *  Copyright (C) 2005-2016 Alfresco Software Limited.
 *
 *  This file is part of Alfresco Activiti Mobile for Android.
 *
 *  Alfresco Activiti Mobile for Android is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Alfresco Activiti Mobile for Android is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with Alfresco. If not, see <http://www.gnu.org/licenses/>.
 */


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def version_code      = System.getenv('VERSION_CODE')      ?: VERSION_CODE
def nexus_username    = System.getenv('NEXUS_USERNAME')    ?: NEXUS_USERNAME
def nexus_password    = System.getenv('NEXUS_PASSWORD')    ?: NEXUS_PASSWORD
def keystore_file     = System.getenv('KEYSTORE_FILE')     ?: RELEASE_STORE_FILE
def keystore_password = System.getenv('KEYSTORE_PASSWORD') ?: RELEASE_STORE_PASSWORD
def key_alias         = System.getenv('KEY_ALIAS')         ?: RELEASE_KEY_ALIAS
def key_password      = System.getenv('KEY_PASSWORD')      ?: RELEASE_KEY_PASSWORD

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    flavorDimensions "default"

    defaultConfig {
        applicationId APPLICATION_ID

        minSdkVersion 19
        targetSdkVersion 28
        multiDexEnabled true
        versionCode version_code as Integer

        versionName VERSION_NAME

        manifestPlaceholders = [PROVIDER_AUTHORITY: PROVIDER_AUTHORITY,
                                'appAuthRedirectScheme': 'iosapsapp://aims/auth']
        resValue "string", "account_name", ACCOUNT_ID
        resValue "string", "sync_adapter_app", SYNC_ADAPTER_APPS
        resValue "string", "sync_adapter_processModel", SYNC_ADAPTER_PROCESSDEF_MODEL
        resValue "string", "sync_adapter_group", SYNC_ADAPTER_GROUPS
        resValue "string", "sync_adapter_transfer", SYNC_ADAPTER_TRANSFER
        resValue "string", "sync_adapter_integration", SYNC_ADAPTER_INTEGRATION

        buildConfigField "String", "PROVIDER_AUTHORITY", "\"" + PROVIDER_AUTHORITY + "\""
        buildConfigField "String", "ACCOUNT_ID", "\"" + ACCOUNT_ID + "\""

        resValue "string", "bamboo_buildnumber", BUILDNUMBER

        //ALFRESCO Integration
        buildConfigField "String", "ALFRESCO_APPLICATION_ID", "\"" + ALFRESCO_APPLICATION_ID + "\""
        buildConfigField "String", "ALFRESCO_ACCOUNT_ID", "\"" + ALFRESCO_ACCOUNT_ID + "\""
        buildConfigField "String", "ALFRESCO_PROVIDER_AUTHORITY", "\"" + ALFRESCO_PROVIDER_AUTHORITY + "\""

        resValue "string", "ga_trackingId", ACTIVITI_TRACKER_ID
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        custom {
            //Add here your custom sign configuration
        }

        release {
            storeFile file(keystore_file)
            storePassword keystore_password
            keyAlias key_alias
            keyPassword key_password
        }
    }


    buildTypes {

        debug {
            // Important : In case of custom application
            // Don't forget to change all values to custom debug values
            applicationIdSuffix ".debug"

            manifestPlaceholders = [PROVIDER_AUTHORITY: PROVIDER_AUTHORITY_DEBUG]
            resValue "string", "account_name", ACCOUNT_ID_DEBUG
            resValue "string", "sync_adapter_app", SYNC_ADAPTER_APPS_DEBUG
            resValue "string", "sync_adapter_processModel", SYNC_ADAPTER_PROCESSDEF_MODEL_DEBUG
            resValue "string", "sync_adapter_group", SYNC_ADAPTER_GROUPS_DEBUG
            resValue "string", "sync_adapter_transfer", SYNC_ADAPTER_TRANSFER_DEBUG
            resValue "string", "sync_adapter_integration", SYNC_ADAPTER_INTEGRATION_DEBUG

            buildConfigField "String", "ACCOUNT_ID", "\"" + ACCOUNT_ID_DEBUG + "\""
            buildConfigField "String", "PROVIDER_AUTHORITY", "\"" + PROVIDER_AUTHORITY_DEBUG + "\""

            resValue "string", "hockeyapp_key", ACTIVITI_HOCKEYAPP_KEY
            resValue "string", "ga_trackingId", ACTIVITI_TRACKER_ID_DEBUG

            //ALFRESCO Integration
            buildConfigField "String", "ALFRESCO_APPLICATION_ID", "\"" + ALFRESCO_APPLICATION_ID_DEBUG + "\""
            buildConfigField "String", "ALFRESCO_ACCOUNT_ID", "\"" + ALFRESCO_ACCOUNT_ID_DEBUG + "\""
            buildConfigField "String", "ALFRESCO_PROVIDER_AUTHORITY", "\"" + ALFRESCO_PROVIDER_AUTHORITY_DEBUG + "\""
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def task = project.tasks.create("copy${variant.name.capitalize()}Apk", Copy)

                    def sourceDir = "${project.buildDir}/outputs/apk/${variant.getFlavorName()}" + "/${variant.buildType.name}/"
                    def destDir = "${project.buildDir}/outputs/apk/"
                    def apkName = output.outputFileName.replace(".apk", "-${variant.versionName}.apk")

                    println ">>>Pre-copy ${apkName}" +
                            "\nsource dir: ${sourceDir}" +
                            "\ndest dir: ${destDir}" +
                            "\napk: ${apkName}"

                    task.from file(sourceDir)
                    task.into file(destDir)
                    task.rename output.outputFileName, apkName
                    task.doFirst {
                        println ">>>Copying ${apkName}" +
                                "\nsource dir: ${sourceDir}" +
                                "\ndest dir: ${destDir}"
                    }
                    task.doLast{
                        println ">>>Copied ${apkName} with success!" +
                                "\nsource dir: ${sourceDir}" +
                                "\ndest dir: ${destDir}"

                        delete file("${project.buildDir}\\outputs\\apk\\" + variant.getFlavorName())
                    }
                    variant.getAssembleProvider().get().finalizedBy(task)
                }
            }
        }
    }

    productFlavors {
        //CUSTOM EXTENSION FLAVOR
        custom {
            //Add here custom configuration
            dependencies {
                //Add here 3rd party dependencies
            }
        }

        //PLAY STORE FLAVOR
        store {
            dependencies {
                //Alfresco Private
                storeImplementation "com.activiti.android.app:private-icons:0.1.0@aar"
            }
            repositories {
                maven {
                    url "https://artifacts.alfresco.com/nexus/content/repositories/internal-releases/"
                    credentials {
                        username nexus_username
                        password nexus_password
                    }
                }
                maven {
                    url "https://artifacts.alfresco.com/nexus/content/repositories/internal-snapshots/"
                    credentials {
                        username nexus_username
                        password nexus_password
                    }
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    //Alfresco SDK embedded
    //compile project(":activiti-sdk")

    implementation 'com.android.support:multidex:1.0.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.3'

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0-rc03"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03'

    implementation "androidx.activity:activity-ktx:1.1.0-rc03"
    implementation "androidx.fragment:fragment-ktx:1.2.0-rc05"

    //Alfresco DBP SDK
    implementation 'com.alfresco.dbp.android:auth:0.2-SNAPSHOT'
    implementation 'com.alfresco.dbp.android:core:0.1-SNAPSHOT'

    //Temporary hardcoded dependencies until release to Maven.
    implementation fileTree(dir: 'libs', include: '*.jar')
    //implementation 'org.alfresco.client:client-android-bpm:1.0.0-beta1'

    implementation 'io.gsonfire:gson-fire:1.5.0'

    //Support
    implementation "com.google.android.material:material:1.2.0-alpha03"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0-alpha01"

    //Square
    implementation 'com.squareup.retrofit2:retrofit:2.0.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.1.0'
    implementation 'com.squareup:otto:1.3.7'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    implementation 'com.squareup.okio:okio:1.6.0'


    //3rd Party Lib
    implementation 'io.reactivex.rxjava2:rxjava:2.2.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation "com.google.android.material:material:1.2.0-alpha03"

    implementation 'com.cocosw:bottomsheet:1.1.1@aar'
    implementation 'com.mattprecious.telescope:telescope:1.4.0@aar'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.github.clans:fab:1.5.5'
    implementation('com.github.afollestad.material-dialogs:core:0.8.5.1@aar') {
        transitive = true
    }
    implementation 'com.makeramen:roundedimageview:2.1.0'
    implementation 'me.relex:circleindicator:1.1.4@aar'
    implementation "com.daimajia.swipelayout:library:1.2.0@aar"
    implementation 'it.sephiroth.android.library.imagezoom:imagezoom:1.0.5'
    implementation "com.mikepenz:aboutlibraries:6.0.8"

    implementation 'com.google.android.gms:play-services-analytics:8.3.0'

    //Debug
    debugImplementation 'net.hockeyapp.android:HockeySDK:3.5.0'

    implementation "android.arch.work:work-runtime:1.0.1"
    implementation "androidx.concurrent:concurrent-futures:1.0.0-alpha03"

    implementation 'com.google.code.gson:gson:2.8.5'
}
